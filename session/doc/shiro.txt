
鉴权 --> 授权

authentication: 鉴权，通过登录 输入用户名、密码进行验证，该帐号是否有权限访问该系统.

authorization: 授权，当前已经登录了的用户是否有权限访问该资源

http://127.0.0.1:8080/spring-shiro/api/sys/login?username=admin&password=123456
http://127.0.0.1:8080/spring-shiro/api/sys/listUser

/pages/User/create.do* = perms[User:create]  
这段配置的含义是：/pages/User/create.do*这样的请求路径，需要鉴权，
且需要用户有“User:create”的权限字符串。
perms是拦截器的名字，默认实现类是：
org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter




参考链接
http://blog.csdn.net/hxpjava1/article/details/7035724

non
	
org.apache.shiro.web.filter.authc.AnonymousFilter
authc 	
org.apache.shiro.web.filter.authc.FormAuthenticationFilter
authcBasic 	
org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
perms 	
org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
port 	
org.apache.shiro.web.filter.authz.PortFilter
rest 	
org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
roles 	
org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
ssl 	org.apache.shiro.web.filter.authz.SslFilter
user 	org.apache.shiro.web.filter.authc.UserFilter

rest:例子/admins/user/**=rest[user],根据请求的方法，相当于/admins/user/**=perms[user:method] ,其中method为post，get，delete等。
port：例子/admins/user/**=port[8081],当请求的url的端口不是8081是跳转到schemal://serverName:8081?queryString,其中schmal是协议http或https等，serverName是你访问的host,8081是url配置里port的端口，queryString
是你访问的url里的？后面的参数。
perms：例子/admins/user/**=perms[user:add:*],perms参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，例如/admins/user/**=perms["user:add:*,user:modify:*"]，当有多个参数时必须每个参数都通过才通过，想当于
isPermitedAll()方法。
roles：例子/admins/user/**=roles[admin],参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，当有多个参数时，例如/admins/user/**=roles["admin,guest"],每个参数通过才算通过，相当于hasAllRoles()方法。
anon:例子/admins/**=anon 没有参数，表示可以匿名使用。
authc:例如/admins/user/**=authc表示需要认证才能使用，没有参数
authcBasic：例如/admins/user/**=authcBasic没有参数表示httpBasic认证
ssl:例子/admins/user/**=ssl没有参数，表示安全的url请求，协议为https
user:例如/admins/user/**=user没有参数表示必须存在用户，当登入操作时不做检查
 
这些过滤器分为两组，一组是认证过滤器，一组是授权过滤器。其中anon，authcBasic，auchc，user是第一组，
perms，roles，ssl，rest，port是第二组





